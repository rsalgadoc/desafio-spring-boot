openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /profile:
    get:
      tags:
        - profile-controller
      operationId: listAllFormsOfMetadata
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /profile/taskStates:
    get:
      tags:
        - profile-controller
      operationId: descriptor
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/tasks:
    get:
      tags:
        - profile-controller
      operationId: descriptor_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/users:
    get:
      tags:
        - profile-controller
      operationId: descriptor_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /taskStates:
    get:
      tags:
        - task-state-entity-controller
      description: get-taskstate
      operationId: getCollectionResource-taskstate-get
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskState'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskState'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
        - task-state-entity-controller
      description: create-taskstate
      operationId: postCollectionResource-taskstate-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStateRequestBody'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
  /taskStates/{id}:
    get:
      tags:
        - task-state-entity-controller
      description: get-taskstate
      operationId: getItemResource-taskstate-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '404':
          description: Not Found
    put:
      tags:
        - task-state-entity-controller
      description: update-taskstate
      operationId: putItemResource-taskstate-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStateRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '204':
          description: No Content
    delete:
      tags:
        - task-state-entity-controller
      description: delete-taskstate
      operationId: deleteItemResource-taskstate-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - task-state-entity-controller
      description: patch-taskstate
      operationId: patchItemResource-taskstate-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStateRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '204':
          description: No Content
  /tasks:
    get:
      tags:
        - task-entity-controller
      description: get-task
      operationId: getCollectionResource-task-get
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  - $ref: '#/components/schemas/CollectionModelEntityModelTask'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTask'
            text/uri-list:
              schema:
                type: string
    put:
      tags:
        - task-controller
      operationId: updateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Task'
    post:
      tags:
        - task-entity-controller
      description: create-task
      operationId: postCollectionResource-task-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
  /tasks/{id}:
    get:
      tags:
        - task-entity-controller
      description: get-task
      operationId: getItemResource-task-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        '404':
          description: Not Found
    put:
      tags:
        - task-entity-controller
      description: update-task
      operationId: putItemResource-task-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        '204':
          description: No Content
    delete:
      tags:
        - task-entity-controller
      description: delete-task
      operationId: deleteItemResource-task-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - task-entity-controller
      description: patch-task
      operationId: patchItemResource-task-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        '204':
          description: No Content
  /tasks/{id}/assigned:
    get:
      tags:
        - task-property-reference-controller
      description: get-user-by-task-Id
      operationId: followPropertyReference-task-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                type: string
        '404':
          description: Not Found
    put:
      tags:
        - task-property-reference-controller
      description: update-user-by-task-Id
      operationId: createPropertyReference-task-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '204':
          description: No Content
    delete:
      tags:
        - task-property-reference-controller
      description: delete-user-by-task-Id
      operationId: deletePropertyReference-task-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - task-property-reference-controller
      description: patch-user-by-task-Id
      operationId: createPropertyReference-task-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '204':
          description: No Content
  /tasks/{id}/assigned/{propertyId}:
    get:
      tags:
        - task-property-reference-controller
      description: get-user-by-task-Id
      operationId: followPropertyReference-task-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '404':
          description: Not Found
    delete:
      tags:
        - task-property-reference-controller
      description: delete-user-by-task-Id
      operationId: deletePropertyReferenceId-task-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /tasks/{id}/state:
    get:
      tags:
        - task-property-reference-controller
      description: get-taskstate-by-task-Id
      operationId: followPropertyReference-task-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
            text/uri-list:
              schema:
                type: string
        '404':
          description: Not Found
    put:
      tags:
        - task-property-reference-controller
      description: update-taskstate-by-task-Id
      operationId: createPropertyReference-task-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '204':
          description: No Content
    delete:
      tags:
        - task-property-reference-controller
      description: delete-taskstate-by-task-Id
      operationId: deletePropertyReference-task-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - task-property-reference-controller
      description: patch-taskstate-by-task-Id
      operationId: createPropertyReference-task-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '204':
          description: No Content
  /tasks/{id}/state/{propertyId}:
    get:
      tags:
        - task-property-reference-controller
      description: get-taskstate-by-task-Id
      operationId: followPropertyReference-task-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskState'
        '404':
          description: Not Found
    delete:
      tags:
        - task-property-reference-controller
      description: delete-taskstate-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /users:
    get:
      tags:
        - user-entity-controller
      description: get-user
      operationId: getCollectionResource-user-get
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/User'
                  - $ref: '#/components/schemas/CollectionModelEntityModelUser'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUser'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
        - user-entity-controller
      description: create-user
      operationId: postCollectionResource-user-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestBody'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /users/search/findByEmail:
    get:
      tags:
        - user-search-controller
      operationId: executeSearch-user-get
      parameters:
        - name: email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '404':
          description: Not Found
  /users/{id}:
    get:
      tags:
        - user-entity-controller
      description: get-user
      operationId: getItemResource-user-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '404':
          description: Not Found
    put:
      tags:
        - user-entity-controller
      description: update-user
      operationId: putItemResource-user-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '204':
          description: No Content
    delete:
      tags:
        - user-entity-controller
      description: delete-user
      operationId: deleteItemResource-user-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - user-entity-controller
      description: patch-user
      operationId: patchItemResource-user-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        '204':
          description: No Content
  /auth/signup:
    post:
      tags:
        - auth-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /auth/signin:
    post:
      tags:
        - auth-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
  /tasks/{taskId}:
    get:
      tags:
        - task-controller
      operationId: getTask
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      tags:
        - task-controller
      operationId: deleteTask
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    TaskState:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    EntityModelTaskState:
      type: object
      properties:
        name:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelTaskState:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            taskStates:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTaskState'
        _links:
          $ref: '#/components/schemas/Links'
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        state:
          $ref: '#/components/schemas/TaskState'
        priority:
          type: string
        description:
          type: string
        type:
          type: string
        assigned:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fullName:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        username:
          type: string
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        credentialsNonExpired:
          type: boolean
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
    EntityModelTask:
      type: object
      properties:
        priority:
          type: string
        description:
          type: string
        type:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelTask:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTask'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelUser:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        username:
          type: string
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        credentialsNonExpired:
          type: boolean
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelUser:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUser'
        _links:
          $ref: '#/components/schemas/Links'
    TaskStateRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    TaskRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        state:
          type: string
        priority:
          type: string
        description:
          type: string
        type:
          type: string
        assigned:
          type: string
    UserRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fullName:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        username:
          type: string
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        credentialsNonExpired:
          type: boolean
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
